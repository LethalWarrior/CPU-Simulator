<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnRun.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
  <metadata name="AddressColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ValueColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>